<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="MSBuild.Sdk.Extras/2.0.54">
  <PropertyGroup>
    <TargetFrameworks>Xamarin.iOS10</TargetFrameworks>
    <IsBindingProject>true</IsBindingProject>
    <RootNamespace>Firebase.DynamicLinks</RootNamespace>
    <AssemblyName>Firebase.DynamicLinks</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <FileVersion>4.0.1.1</FileVersion>
    <IPhoneResourcePrefix>Resources</IPhoneResourcePrefix>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Xamarin.Firebase.iOS.DynamicLinks</PackageId>
    <Title>Firebase APIs Dynamic Links iOS Library</Title>
    <Summary>C# bindings for Firebase APIs Dynamic Links iOS Library</Summary>
    <Description>C# bindings for Firebase APIs Dynamic Links iOS Library</Description>
    <Authors>Microsoft</Authors>
    <Owners>Microsoft</Owners>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageIconUrl>https://raw.githubusercontent.com/xamarin/GoogleApisForiOSComponents/master/icons/firebaseiosdynamiclinks_128x128.png</PackageIconUrl>
    <PackageProjectUrl>https://go.microsoft.com/fwlink/?linkid=865537</PackageProjectUrl>
    <PackageLicenseFile>License.md</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageVersion>4.0.1.1</PackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Xamarin.iOS" />
  </ItemGroup>
  
  <ItemGroup>
    <Folder Include="Resources\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\..\externals\FirebaseDynamicLinks.framework\FirebaseDynamicLinks">
      <Link>FirebaseDynamicLinks.framework</Link>
    </None>
    <None Include="External-Dependency-Info.txt" Pack="True" PackagePath="THIRD-PARTY-NOTICES.txt" />
    <None Include="License.md" Pack="True" PackagePath="License.md" />
  </ItemGroup>

  <ItemGroup>
    <NativeReference Include="..\..\..\externals\FirebaseDynamicLinks.framework">
      <Kind>Framework</Kind>
      <ForceLoad>True</ForceLoad>
      <LinkerFlags>-ObjC -lsqlite3 -lz</LinkerFlags>
      <Frameworks>AssetsLibrary CoreMotion MessageUI QuartzCore Security StoreKit SystemConfiguration UIKit</Frameworks>
      <WeakFrameworks>WebKit</WeakFrameworks>
    </NativeReference>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Enums.cs" />
    <Compile Remove="ApiDefinition.cs" />
  </ItemGroup>
  
  <ItemGroup>
    <ObjcBindingCoreSource Include="Enums.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true'" />
  </ItemGroup>

  <ItemGroup>
    <ObjcBindingApiDefinition Include="ApiDefinition.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true'" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Xamarin.Build.Download" Version="0.4.11" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Core\Core.csproj" />
  </ItemGroup>
  
  <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />

  <!-- We are embedding a framework using NativeReference tag but, on Windows with .NET Core project, 
     this tags means another thing. On windows, if a NativeReference exists it creates a file named
     Native.$(AssemblyName).manifest which on macOS is not being generated. This is just to satisfy
     the MSBuild packing process as it's looking for it. It seems not to be packed in the end. -->
  <Target Name="_TouchNativeManifestWorkaround" BeforeTargets="GenerateNuspec" Condition="!Exists('$(OutputPath)$(TargetFrameworks)\Native.$(AssemblyName).manifest')">
    <Touch Files="$(OutputPath)$(TargetFrameworks)\Native.$(AssemblyName).manifest" AlwaysCreate="True" />
  </Target>
</Project>
